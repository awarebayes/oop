cmake_minimum_required(VERSION 3.5)

project(1_qt_creator VERSION 0.1 LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets REQUIRED)

set(PROJECT_SOURCES
        src/main.cpp
        src/view.cpp
        inc/view.h
        src/mainwindow.ui
        src/model.cpp inc/model.h src/mesh3d.cpp inc/mesh3d.h src/linalg.cpp inc/linalg.h src/renderer.cpp inc/renderer.h inc/transformations.h inc/config.h inc/observable.h src/transformations.cpp inc/controller.h src/controller.cpp inc/result.h inc/obj_io.h src/obj_io.cpp inc/error.h)

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(1_qt_creator
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
    )
# Define target properties for Android with Qt 6 as:
#    set_property(TARGET 1_qt_creator APPEND PROPERTY QT_ANDROID_PACKAGE_SOURCE_DIR
#                 ${CMAKE_CURRENT_SOURCE_DIR}/android)
# For more information, see https://doc.qt.io/qt-6/qt-add-executable.html#target-creation
else()
    if(ANDROID)
        add_library(1_qt_creator SHARED
            ${PROJECT_SOURCES}
        )
# Define properties for Android with Qt 5 after find_package() calls as:
#    set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
    else()
        add_executable(1_qt_creator
            ${PROJECT_SOURCES}
        )
    endif()
endif()

target_link_libraries(1_qt_creator PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)

set_target_properties(1_qt_creator PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER my.example.com
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(1_qt_creator)
endif()
